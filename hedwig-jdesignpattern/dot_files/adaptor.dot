digraph domain {
  edge [ fontsize = 11 ];
  node [ shape=record ];
  subgraph cluster_0 {
    label = "io.hedwig.hellodesignpattern.structural.decorator";
    HelloWorldDecorator [ label = "{HelloWorldDecorator | + public String helloDecorator()\l+ public String helloWorld()\l}" ] 
    DefaultHelloWorld [ label = "{DefaultHelloWorld | }" ] 
  }
  subgraph cluster_1 {
    label = "io.hedwig.hellodesignpattern.structural.adaptor";
    HelloAdapterDesignPattern [ label = "{HelloAdapterDesignPattern | + public String helloDesignPattern()\l}" ] 
    HelloWorldAdapter [ label = "{HelloWorldAdapter | + public String helloWorld()\l}" ] 
  }
  subgraph cluster_2 {
    label = "io.hedwig.hellodesignpattern.structural.bridge";
    HelloWorldImpl [ label = "{HelloWorldImpl | + public abstract String generate()\l}" ] 
    DesignPatternWorldImpl [ label = "{DesignPatternWorldImpl | + public String generate()\l}" ] 
    JavaHelloWorldImpl [ label = "{JavaHelloWorldImpl | + public String generate()\l}" ] 
    HelloWorldBridge [ label = "{HelloWorldBridge | + public String helloWorld()\l}" ] 
  }
  subgraph cluster_3 {
    label = "io.hedwig.hellodesignpattern.structural.facade";
    HelloWorldFacadeInstanceHolder [ label = "{HelloWorldFacadeInstanceHolder | }" ] 
    HelloWorldFacade [ label = "{HelloWorldFacade | + public HelloWorld facadeHelloWorld()\l+ public static HelloWorldFacade instance()\l}" ] 
  }
  subgraph cluster_4 {
    label = "io.hedwig.hellodesignpattern.structural.composite";
    CompositeHelloWorld [ label = "{CompositeHelloWorld | + public String helloWorld()\l}" ] 
    DefaultHelloWorld [ label = "{DefaultHelloWorld | }" ] 
  }
  subgraph cluster_5 {
    label = "io.hedwig.hellodesignpattern.structural.proxy";
    HelloWorldProxy [ label = "{HelloWorldProxy | + public String helloWorld()\l}" ] 
    DefaultHelloWorld [ label = "{DefaultHelloWorld | }" ] 
  }
  subgraph cluster_6 {
    label = "io.hedwig.hellodesignpattern.structural.flyweight";
    HelloWorldFlyWeight [ label = "{HelloWorldFlyWeight | + public String helloWorld()\l}" ] 
    HelloWorldFactoryHolder [ label = "{HelloWorldFactoryHolder | }" ] 
    HelloWorldFlyWeightFactory [ label = "{HelloWorldFlyWeightFactory | + public HelloWorld createHelloWorld(String)\l+ public static HelloWorldFlyWeightFactory instance()\l}" ] 
  }
  HelloWorldAdapter -> HelloAdapterDesignPattern [ dir=back arrowtail=odiamond color=slategray];
  HelloWorldFactoryHolder -> HelloWorldFlyWeightFactory [ dir=back arrowtail=odiamond color=slategray];
  HelloWorldBridge -> HelloWorldImpl [ dir=back arrowtail=odiamond color=slategray];
  HelloWorldFacadeInstanceHolder -> HelloWorldFacade [ dir=back arrowtail=odiamond color=slategray];
  DesignPatternWorldImpl -> HelloWorldImpl [arrowhead=empty color=slategray];
  JavaHelloWorldImpl -> HelloWorldImpl [arrowhead=empty color=slategray];
}